{section}
{column:width=3%}
{column}
{column:width=22%}
\\

{center}
!OC_Chef_Logo_small-wide.png!
{center}
\\
{panel:bgColor=#d7d4c3}

!littleSA.png|align=left,hspace=20!
h4. {color:#f7681a}"Chef は小さなシステム管理ロボみたいだ… どんな風にシステムを設定してほしいか教えてやれば、あとは面倒な仕事はすべてやってくれるよ」{color}
h6. {color:#666669} ーー Chef ユーザ {color}

\\
{panel}
{column}
{column:width=3%}
{column}
{column}
\\

h3. {color:#f7681a}Chef はオープンソースのシステム統合フレームワークであり、特にクラウドを自動化するために作られています。{color} 
!AdamChrisHuH.jpg|align=right,hspace=24,vspace=10!
h4. 現実の問題がどんなに複雑であろうと、Chef を使えばインフラに関するすべての場面で、サーバをデプロイしたりアプリケーションをスケールさせたりすることが簡単になります。

h4. Chef を利用するなら、インフラの各パーツがどんな風に作られてほしいのか、抽象化されたソースコードの形で定義し、それからその内容をそれぞれのサーバに適用する、という流れになります。

h4. _その結果は完全に自動化されたインフラです_：新しいサーバが用意されてきたときでも、そのサーバがアーキテクチャの中でどんな役割を果たすのかを Chef に教えてやるだけで済みます。

{center}
{table:border=0|cellspacing=10|cellpadding=10}
{tr}
{td}
{panel:bgColor=#d7d4c3}

!90spacer.png|align=left!
h3. [Chef とは何か|What is Chef?]

{panel}
{td}
{td}
{panel:bgColor=#d7d4c3}

!90spacer.png|align=left!
h3. [Chef のコアをなす原則|Chef Core Principles]

{panel}
{td}
{td}
{panel:bgColor=#d7d4c3}

!90spacer.png|align=left!
h3. [どうして Chef を使うべきか|Why Chef?]

{panel}
{td}
{td}
{panel:bgColor=#d7d4c3}

!90spacer.png|align=left!
h3. [さまざまな種類の Chef|The Different Flavors of Chef]
{panel}
{td}
{td}
{panel:bgColor=#d7d4c3}

!90spacer.png|align=right!
h3. [よくある質問と答え|FAQ]
{panel}
{td}
{tr}
{table}
{center}

{column}
{column:width=5%}
{column}
{section}
