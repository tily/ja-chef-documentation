{section}
{column:width=3%}
{column}
{column}
\\
\\
{panel:bgColor=#d7d4c3} 
!OC_Chef_Logo_small.png|align=left,hspace=40,vspace=4!
\\
h3. {color:#f7681a}Chef が行う作業のほとんどは Chef クライアントで行われます。

[Chef サーバ] と REST で通信し、[署名つきヘッダ|認証と権限管理]で認証を行い、[クックブック]のコンパイルと実行を行います。{color}
{panel}

h3. クライアントが複数ノードのために作業を行います
Chef クライアントは[ノード]の代わりに作業を行います。1 つの Chef クライアントで、複数ノードのためにレシピを実行することができます。

h3. クライアントがすべての作業を行います
クライアントですべてのアクションが行われますーー[Chef サーバ]と[Chef インデクサ]は大まかに言って、単にクライアントに情報を提供するためだけに存在しているサービスなのです。

h2. クライアントを定期的に起動させることができます
もし必要ならば、Chef クライアントを永続するデーモンとして動かすことができます。これを行うには、Chef クライアントの起動スクリプトで下記のようなコマンドを実行します：

{code:bash|linenos=false|title=Chef クライアントの実行間隔とスプレー}
$ chef-client -i 3600 -s 600
{code}

{{-i}} オプションには _実行間隔(Interval)_ を指定できますーーChef クライアントが起動し[ノード]を収束する間隔のことです。{{-s}} オプションには _スプレー(Splay)_ を指定しますーー実行間隔をランダムに増やし、[thundering herd problem|http://en.wikipedia.org/wiki/Thundering_herd_problem] を回避する助けとなります。

{column} 
{column:width=20%}
\\ 
\\
{info:title=[Chef 実行の解剖図]}
\\
[Chef 実行の解剖図]では、[Chef クライアント]がそれぞれの[ノード]に設定を適用する際に、どんな過程をたどるのか詳しく解説しています。
{info}
\\
{tip}
*_Chef クライアント用クックブック_*  
\\
\\
[Opscode 製の Chef クライアント用クックブック|http://community.opscode.com/cookbooks/chef-client]を利用して、サーバで `chef-client` デーモンを起動させることができます。knife bootstrap で新しいサーバに Chef クライアントをインストールする際などに有用です。

クックブックでは、実行間隔 1800 秒、スプレー 20 秒のデフォルト値が設定されています。さらに他にも、このページに書いてあるような細かい設定情報も含まれています。
{tip}
{column}
{column:width=5%}
{column}
{section}
{section}
{column:width=3%}
{column}
{column}
お決まりの --help オプションをつければ chef-client のオプション引数一覧を見ることができます：

{code:title=Chef Client Option List}
$ chef-client --help
Usage: /usr/bin/chef-client (options)
    -S, --server CHEFSERVERURL       The chef server URL
    -k, --client_key KEY_FILE        Set the client key file location
    -c, --config CONFIG              The configuration file to use
    -d, --daemonize                  Daemonize the process
    -E, --environment ENVIRONMENT    Set the Chef Environment on the node
    -g, --group GROUP                Group to set privilege to
    -i, --interval SECONDS           Run chef-client periodically, in seconds
    -j JSON_ATTRIBS                  Load attributes from a JSON file or URL
        --json-attributes
    -l, --log_level LEVEL            Set the log level (debug, info, warn, error, fatal)
    -L, --logfile LOGLOCATION        Set the log file location, defaults to STDOUT - recommended for daemonizing
    -N, --node-name NODE_NAME        The node name for this client
        --once                       Cancel any interval or splay options, run chef once and exit
    -P, --pid PIDFILE                Set the PID file location, defaults to /tmp/chef-client.pid
    -s, --splay SECONDS              The splay time for running at intervals, in seconds
    -u, --user USER                  User to set privilege to
    -K, --validation_key KEY_FILE    Set the validation key file location, used for registering new clients
    -v, --version                    Show chef version
    -h, --help                       Show this message
{code}

JSON_ATTRIBS に {{[実行リスト|実行時に JSON で実行リストを指定するには]}} を書き、そのノードに追加したいロール／レシピを指定することもできます。

h2. chef-client に関する設定項目
[Chef に関する設定項目] を見れば、chef-client や他のすべてのコマンドの設定項目について詳しく書かれています。

\\
\\
\\
\\
{column}
{column:width=5%}
{column}
{section}
{section}
----
{column:width=45%}

!leftarrow.png|align=left,hspace=4! 
[コンパイル時にリソースを評価・実行するには]

{column}
{column:width=40%}
{column}

{column:width=15%}

!rightarrow.png|align=right,hspace=4! 
[Chef Solo]

\\
\\
{column}
{section}
