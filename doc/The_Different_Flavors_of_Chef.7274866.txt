{section}
{column:width=3%}
{column}
{column}

!Mitch.jpg|align=right,hspace=20,vspace=8!

h3. {color:#f7681a}自分に合ったサイズを選びましょう。_あなた_ に適した Opscode Chef の製品があるはずです。{color}


h1. Chef Solo
[Chef Solo] はオープンソースで公開されている Chef のスタンドアロン版であり、Chef サーバがなくてもノードのローカルで動作します。ということはつまり、ノードを設定するために必要なすべての情報と[クックブック集|Coobooks]がローカル・ディスクに存在しなければなりません。情報とクックブック集は、コマンドラインや設定ファイルのオプションに指定することで、外部の URL から取得することも可能です。

h1. Chef クライアント／Chef サーバ
オープンソースの [Chef サーバ|Chef Server] はクライアント／サーバのセットで Chef の機能とパワーを提供します。[Chef クライアント|Chef Client] は Chef の代理人であり、Chef で管理しようとしているシステム (つまりノード) のローカルで動作します。Chef クライアントは Chef サーバに接続し、そのノードで何をすればいいかを教えてもらいます。この仕組みのおかげで、動的かつ柔軟な構成管理が可能となります。 たとえば、いくつかのノードにロールを適用して同じ状態に保つことができるし、ノードからサーバに問い合わせ、中央管理されている他のノードの情報を検索することもできます。これによって、インフラの他のどこかで条件が変わったら、変化に応じて自分自身を動的に設定することができるのです。

h1. Chef ホスティングサービス
Opscode の [Chef ホスティングサービス|http://www.opscode.com/hosted-chef/]は Chef の自由さ・柔軟性と Opscode の信頼性・スピードを組み合わせです。Chef ホスティングサービスはクラウド上の高可用でスケールしやすい Chef サーバであり、追加機能としてきめこまかいロールに基づいた権限管理もできたりします。
世界初の構成管理プラットフォーム・サービス (PaaS) でもあります。{color:#f7681a}つまりは、Chef によるインフラ管理をはじめるのが今までになく簡単になっているということです。{color}Chef サーバと同じように、Chef クライアントは Chef ホスティングサービスに接続して、ノードのローカルで何をすべきか教えてもらいます：自分の Chef サーバを用意しなくても、インフラを自動化することができるのです。

h1. プライベートな Chef
Opscode のパワーとスピード。Chef の自由さと柔軟性。あなたの持つ問題に適したカスタマイズ。[プライベートな Chef|http://www.opscode.com/private-chef/] は
Chef ホスティングのパワー・柔軟性・可用性・パフォーマンスが必要だが、情報のやりとりをプライベート・ネットワーク内にとどめておく必要のある企業向けに提供しています。

\\
\\
\\
{column}
{column:width=5%}
{column}
{section}
{section}
----
{column:width=45%}

!leftarrow.png|align=left,hspace=4! 
[どうして Chef を使うべきか]

{column}
{column:width=40%}
{column}

{column:width=15%}

!rightarrow.png|align=right,hspace=4! 
[FAQ]

\\
\\
{column}
{section}
